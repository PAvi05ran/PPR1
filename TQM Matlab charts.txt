

Example 2: Pareto - TQM
y = [2 3 45 20 32];
pareto(y)


Example 3: Pareto - TQM
y = [4 1 40 55];
pareto(y)


Example 4: pareto - TQM
x = ["Chocolate" "Apple" "Pecan" "Cherry" "Pumpkin"];
y = [35 50 30 5 80];
pareto(y,x,1)
ylabel('Votes')


Example 5: Pareto - multile chart in single line - TQM
ax1 = nexttile;
pareto(ax1,[20 50 33 12])


Example 6 : pareto - TQM
x = ["Fred" "Gina" "Norman" "Josphat" "Julia" "Wally" "Heidi" "Pat"];
y = [200 120 555 608 1024 101 57 687];
pareto(y,x)
title('Lines of Code by Programmer')


Example 7: pareto in TQM
x = categorical(["Firestorm" "Mr. Ballista" "Moonshot" "Lil' Joe" "Houston"]); 
y = [526 100 221 40 10];
pareto(y,x)
xlabel('Rocket Model')
ylabel('Launch Failures')


Example 8: Pareto in TQM
x = datetime(2018,5,1:5,'Format','d MMM');
y = [100 526 221 60 49];
pareto(y,x)
xlabel('Manufacturing Date')
ylabel('Defects')




Example 12: Pareto grid in TQM
ax(1).YColor = [0.50 0.37 0.60];
ax(2).YColor = [0 0.50 0.10];
grid on


Example 13: Normal distribution in TQM
load examgrades
x = grades(:,1);
             <Enter>
x = [-3:.1:3];
y = normpdf(x,0,1);
plot(x,y)
pd = makedist('Normal')
               <Enter> standard normal distribution
x = -3:.1:3;
p = cdf(pd,x);
plot(x,p)
pd = fitdist(x,'Normal')
      <Enter> Compare Gamma and Normal Distribution pdfs
a = 100;
b = 5;
x = 250:750;
y_gam = gampdf(x,a,b);
mu = a*b
sigma = sqrt(a*b^2)
y_norm = normpdf(x,mu,sigma);
       Plot the pdfs of the gamma distribution and the normal distribution on the same figure.
plot(x,y_gam,'-',x,y_norm,'-.')
title('Gamma and Normal pdfs')
xlabel('Observation')
ylabel('Probability Density')
legend('Gamma Distribution','Normal Distribution')
       Relationship Between Normal and Lognormal Distributions
pd = makedist('Lognormal','mu',5,'sigma',2)
mean(pd)
rng('default');  % For reproducibility
x = random(pd,10000,1);
logx = log(x);
m = mean(logx)
histfit(logx)
         Compare Student's t and Normal Distribution pdfs
pd_normal = fitdist(logx,'Normal')
x = [-5:0.1:5];
y1 = tpdf(x,5);
y2 = tpdf(x,15);
z = normpdf(x,0,1);
plot(x,y1,'-.',x,y2,'--',x,z,'-')
legend('Student''s t Distribution with \nu=5', ...
    'Student''s t Distribution with \nu=15', ...
    'Standard Normal Distribution','Location','best')
xlabel('Observation')
ylabel('Probability Density')
title('Student''s t and Standard Normal pdfs')



Example 14: Boxplot in TQM
load carsmall
boxplot(MPG)
xlabel('All Vehicles')
ylabel('Miles per Gallon (MPG)')
title('Miles per Gallon for All Vehicles') 


Example 15: Boxplot
load patients
boxchart(Age)
ylabel('Age (years)')


Example 16: boxplot
Y = magic(10)
boxchart(Y)
xlabel('Column')
ylabel('Value')


boxchart(Y')
xlabel('Row')
ylabel('Value')


Example 17: Boxplot
Create Multiple Box Charts Using Positional Grouping Variable (refernce): https://in.mathworks.com/help/matlab/ref/boxchart.html
tsunamis = readtable('tsunamis.xlsx');
tsunamis(1:8,["Month","Cause","EarthquakeMagnitude"])
unique(tsunamis.Cause)
idx = contains(tsunamis.Cause,'Earthquake');
earthquakes = tsunamis(idx,:);
boxchart(earthquakes.Month,earthquakes.EarthquakeMagnitude)
xlabel('Month')
ylabel('Earthquake Magnitude')


Example 18: Scatter in TQM
import numpy as np
import matplotlib.pyplot as plt
a = [8,10, 14, 12,20,25,30, 44, 48,52, 32, 30,44, 40, 55,50] b = [70, 100, 136,120, 200, 210, 250, 300, 310, 411, 373, 427, 400, 420, 500, 510] colors = (0,0,0)
plt.scatter(a, b, c = colors)
plt.title('Scatter plot showing correlation')
plt.xlabel('x variable')
plt.ylabel('y variable')
plt.show()

Example 19: Scatter 
d = (0:63)';
s = qammod(d,64);
scatterplot(s)

Example 20:  scatter 
x = linspace(0,3*pi,200);
y = cos(x) + rand(1,200);  
scatter(x,y)


Example 21: Scatter
x = linspace(0,3*pi,200);
y = cos(x) + rand(1,200);
sz = 25;
c = linspace(1,10,length(x));
scatter(x,y,sz,c,'filled')

Example 22: Histogram
x = [0 2 9 2 5 8 7 3 1 9 4 3 5 8 10 0 1 2 9 5 10];
hist(x)

Example 23: Histogram multiple columns
x = randn(1000,3); 
hist(x)

Example 24: Plot a histogram of 1,000 random numbers sorted into 50 equally spaced bins.(specify number)

x = randn(1000,1);  
nbins = 50;
hist(x,nbins)

Example 25: width and frequency - standard deviation paroblem - Book page no : 12.19
a = [9.505 6; 9.525 2; 9.545 20; 9.565 32; 9.585 22; 9.605 8; 9.625 6; 9.645 4]

std (a)

Example 26: Taguchi orthogonal array
n = 4;
m = 5;
A=randn(m, n);  % random mxn rows x col
R=orth( A.' ).'; % orthogonal rows
R
R =
     0.2678       0.8739     -0.34303      0.21661
      0.779      -0.2298      0.32758      0.48274
   -0.51161    -0.092235    -0.098559      0.84855
   -0.24433      0.41832      0.87482  -0.00023289
                          (or)
m = 4;
n = 5;
A=randn(m, n);  % random mxn rows x col
size(A)
R=orth( A.' ).'; % orthogonal rows
size(R)
R*R'
R'*R

Example 27: orthogonal array
A = [1 0 1;-1 -2 0; 0 1 -1];
r = rank(A)
Q = orth(A)
E = norm(eye(r)-Q'*Q,'fro')


Example 28: to calculate the number of experiment based on orthogonal array
Question: a) In any case, there is no Statistics Toolbox function for computing general orthogonal arrays. There is a D-optimal function for generating designs for a specific combination of number of factors, number of levels, and number of runs. It usually gives good designs, and may reproduce the orthogonal array in some cases. Here's how you could generate a 31-run design for 4 5-level factors:
b)I get an orthogonal array with 25 runs:
Answer:
a) sortrows(rowexch(4,31,'linear','cat',1:4,'levels',5))
b) sortrows(rowexch(4,25,'linear','cat',1:4,'levels',5,'tries',200))

Example: 29 - Cost of Qaulity
Given data: prevention cost =    , Appraisal cost =  , Internal failure cost = , External failure cost=  

Solution : Total cost = Prevention cost + Appraisal cost + Internal failure cost + External failure cost
Code:
pc = [75]
ac = [63]
ifc = [88]
efc = [72]
sum [75 63 88 72]

Example 30: control charts

x1=input("enter the input x1");
x2=input("enter the input x2");
x3=input("enter the input x3");
x4=input("enter the input x4");
x=(x1+x2+x3+x4)./4
A=[x1; x2; x3; x4]
M=mean(x)
S=sqrt(var(x))
Mx=max(A)
Mi=min(A)
R=Mx-Mi
Rbar=mean(R)
y=1:1:max(size(x))
A2=0.729;
plot(y,x,'-k')
hold on
plot(y,x,'ok')
yline(M+(A2*Rbar), 'r')
yline(M-(A2*Rbar), 'r')

Answer pge; 12.44
x1 = [51; 52; 51; 48; 53; 51; 52; 54; 53; 50]
x2 = [50; 53; 52; 49; 49; 49; 53; 52; 53; 52]
x3 = [52; 52; 52; 52; 49; 49; 47; 51; 52; 52]
x4 = [49; 54; 51; 49; 54; 50; 52; 53; 54; 53]

